shadow$provide.module$node_modules$react_katex$dist$react_katex = function(global, require, module, exports) {
  (function(global, factory) {
    "object" === typeof module && "object" === typeof module.exports ? factory(exports, require("module$node_modules$react$index"), require("module$node_modules$prop_types$index"), require("module$node_modules$katex$dist$katex")) : "function" === typeof define && define.amd ? define(["exports", "react", "prop-types", "katex"], factory) : (global = "undefined" !== typeof globalThis ? globalThis : global || self) && factory(global.index = {}, global.react, global.propTypes, global.katex);
  })(this, function(exports, _react, _propTypes, _katex) {
    function _getRequireWildcardCache(nodeInterop) {
      if ("function" !== typeof WeakMap) {
        return null;
      }
      var cacheBabelInterop = new WeakMap(), cacheNodeInterop = new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    Object.defineProperty(exports, "__esModule", {value:!0});
    (function(target, all) {
      for (var name in all) {
        Object.defineProperty(target, name, {enumerable:!0, get:all[name]});
      }
    })(exports, {BlockMath:() => BlockMath, InlineMath:() => InlineMath});
    _react = function(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (null === obj || "object" !== typeof obj && "function" !== typeof obj) {
        return {default:obj};
      }
      if ((nodeInterop = _getRequireWildcardCache(nodeInterop)) && nodeInterop.has(obj)) {
        return nodeInterop.get(obj);
      }
      var newObj = {}, hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor, key;
      for (key in obj) {
        if ("default" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          desc && (desc.get || desc.set) ? Object.defineProperty(newObj, key, desc) : newObj[key] = obj[key];
        }
      }
      newObj.default = obj;
      nodeInterop && nodeInterop.set(obj, newObj);
      return newObj;
    }(_react);
    _propTypes = _propTypes && _propTypes.__esModule ? _propTypes : {default:_propTypes};
    _katex = _katex && _katex.__esModule ? _katex : {default:_katex};
    exports = (Component, {displayMode}) => {
      const MathComponent = ({children, errorColor, math, renderError}) => {
        const formula = null !== math && void 0 !== math ? math : children, {html, error} = (0,_react.useMemo)(() => {
          try {
            return {html:_katex.default.renderToString(formula, {displayMode, errorColor, throwOnError:!!renderError}), error:void 0};
          } catch (error) {
            if (error instanceof _katex.default.ParseError || error instanceof TypeError) {
              return {error};
            }
            throw error;
          }
        }, [formula, errorColor, renderError]);
        return error ? renderError ? renderError(error) : _react.default.createElement(Component, {html:`${error.message}`}) : _react.default.createElement(Component, {html});
      };
      MathComponent.propTypes = {children:_propTypes.default.string, errorColor:_propTypes.default.string, math:_propTypes.default.string, renderError:_propTypes.default.func};
      return MathComponent;
    };
    const InternalPathComponentPropTypes = {html:_propTypes.default.string.isRequired}, InternalBlockMath = ({html}) => _react.default.createElement("div", {"data-testid":"react-katex", dangerouslySetInnerHTML:{__html:html}});
    InternalBlockMath.propTypes = InternalPathComponentPropTypes;
    const InternalInlineMath = ({html}) => _react.default.createElement("span", {"data-testid":"react-katex", dangerouslySetInnerHTML:{__html:html}});
    InternalInlineMath.propTypes = InternalPathComponentPropTypes;
    const BlockMath = exports(InternalBlockMath, {displayMode:!0}), InlineMath = exports(InternalInlineMath, {displayMode:!1});
  });
};

//# sourceMappingURL=module$node_modules$react_katex$dist$react_katex.js.map
